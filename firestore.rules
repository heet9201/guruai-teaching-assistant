rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Sessions collection
    match /sessions/{sessionId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource.data.userId);
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isOwner(get(/databases/$(database)/documents/sessions/$(sessionId)).data.userId);
        allow create: if isAuthenticated();
        allow update, delete: if isOwner(get(/databases/$(database)/documents/sessions/$(sessionId)).data.userId);
      }
    }
    
    // Users collection
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      
      // User preferences subcollection
      match /preferences/{prefId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Content collection (for generated content)
    match /content/{contentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource.data.createdBy);
    }
    
    // Worksheets collection
    match /worksheets/{worksheetId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource.data.createdBy);
    }
  }
}